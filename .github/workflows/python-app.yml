# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]
    services:
          postgres:
            image: postgres:12
            env:
              POSTGRES_PASSWORD: postgres
            ports:
            - 5432:5432
            # Needed because the postgres container does not provide a health check.
            options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Set up environment variables
      run: |
        echo "FLASK_ENV=testing" >> $GITHUB_ENV
        echo "FLASK_APP=similarity" >> $GITHUB_ENV

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install pipenv
      run: |
        python -m pip install --upgrade pipenv wheel
    - uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/Pipfile') }}
        restore-keys: |
          ${{ runner.os }}-pip

    - name: Install dependencies
      if: steps.cache-pipenv.outputs.cache-hit != 'true'
      run: |
        pipenv --python ${{ matrix.python-version }} install

    - name: Install lint
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --max-complexity=10 --max-line-length=127 --statistics --exclude=migrations
    - name: Copy local configuration file
      run: |
        cp ./similarity/local_config.py.example ./similarity/local_config.py

    - name: DB Initiate
      run: |
        pipenv run flask db migrate
        pipenv run flask create-db

    - name: Test with pytest
      run: |
        pipenv run pytest tests -v
